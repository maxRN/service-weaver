@inproceedings{alshuqayranSystematicMappingStudy2016,
  title = {A {{Systematic Mapping Study}} in {{Microservice Architecture}}},
  booktitle = {2016 {{IEEE}} 9th {{International Conference}} on {{Service-Oriented Computing}} and {{Applications}} ({{SOCA}})},
  author = {Alshuqayran, Nuha and Ali, Nour and Evans, Roger},
  year = {2016},
  month = nov,
  pages = {44--51},
  doi = {10.1109/SOCA.2016.15},
  abstract = {The accelerating progress of network speed, reliability and security creates an increasing demand to move software and services from being stored and processed locally on users' machines to being managed by third parties that are accessible through the network. This has created the need to develop new software development methods and software architectural styles that meet these new demands. One such example in software architectural design is the recent emergence of the microservices architecture to address the maintenance and scalability demands of online service providers. As microservice architecture is a new research area, the need for a systematic mapping study is crucial in order to summarise the progress so far and identify the gaps and requirements for future studies. In this paper we present a systematic mapping study of microservices architectures and their implementation. Our study focuses on identifying architectural challenges, the architectural diagrams/views and quality attributes related to microsevice systems.},
  keywords = {Business,Computer architecture,Conferences,Security,Service-oriented architecture,Systematics},
  file = {/Users/maxrn/Zotero/storage/EDXTLHE3/Alshuqayran et al. - 2016 - A Systematic Mapping Study in Microservice Archite.pdf;/Users/maxrn/Zotero/storage/A7QK4F99/7796008.html}
}

@misc{ApacheHTTPServer,
  title = {Ab - {{Apache HTTP}} Server Benchmarking Tool - {{Apache HTTP Server Version}} 2.4},
  urldate = {2023-05-26},
  howpublished = {https://httpd.apache.org/docs/2.4/programs/ab.html},
  file = {/Users/maxrn/Zotero/storage/CEBKQIQR/ab.html}
}

@book{building_microservices,
  title = {Building Microservices},
  author = {Newman, Sam},
  year = {2015},
  edition = {First edition},
  publisher = {{O'Reilly}},
  address = {{Beijing}},
  abstract = {Auf dem Cover: "designing fine-grained systems"},
  isbn = {978-1-4919-5035-7},
  keywords = {Computer architecture,Computer software Development,COMPUTERS / Computer Architecture,Distributed operating systems (Computer),Distributed operating systems (Computers),Mikroservice,Verteiltes System}
}

@misc{digitalOcean,
  title = {{{DigitalOcean}} | {{The Cloud}} for {{Builders}}},
  urldate = {2023-05-26},
  abstract = {Simple, scalable cloud computing solutions built for startups and small-to-midsize businesses.},
  howpublished = {https://www.digitalocean.com},
  langid = {english},
  file = {/Users/maxrn/Zotero/storage/R3ZQZK72/www.digitalocean.com.html}
}

@misc{goland,
  title = {{{GoLand}} by {{JetBrains}}: {{More}} than Just a {{Go IDE}}},
  shorttitle = {{{GoLand}} by {{JetBrains}}},
  journal = {JetBrains},
  urldate = {2023-05-24},
  abstract = {A Go IDE with extended support for JavaScript, TypeScript, and databases.},
  howpublished = {https://www.jetbrains.com/go/},
  langid = {english},
  file = {/Users/maxrn/Zotero/storage/ZK4TMCJL/go.html}
}

@misc{GoogleServiceWeaver,
  title = {Google {{Service Weaver Enables Coding}} as a {{Monolith}} and {{Deploying}} as {{Microservices}}},
  journal = {InfoQ},
  urldate = {2023-04-26},
  abstract = {Google has released Service Weaver, an open-source framework for building and deploying distributed applications. The Go-based framework includes a set of programming libraries that enable writing applications as a single modular binary. The other component is a set of deployers that allow for configuring the runtime topology and running the application locally or in the cloud.},
  howpublished = {https://www.infoq.com/news/2023/03/google-weaver-framework/},
  langid = {english},
  file = {/Users/maxrn/Zotero/storage/LWCTDU6D/google-weaver-framework.html}
}

@misc{HowImplementService,
  title = {How to {{Implement}} a {{Service Weaver Deployer}}},
  urldate = {2023-04-26},
  howpublished = {https://serviceweaver.dev/blog/deployers.html},
  file = {/Users/maxrn/Zotero/storage/HB9E7T7K/deployers.html}
}

@misc{IntroducingServiceWeaver,
  title = {Introducing {{Service Weaver}}: {{A Framework}} for {{Writing Distributed Applications}}},
  shorttitle = {Introducing {{Service Weaver}}},
  journal = {Google Open Source Blog},
  urldate = {2023-04-26},
  file = {/Users/maxrn/Zotero/storage/IYRJ7J49/introducing-service-weaver-framework-for-writing-distributed-applications.html}
}

@misc{IntroducingSpringModulith,
  title = {Introducing {{Spring Modulith}}},
  journal = {Introducing Spring Modulith},
  urldate = {2023-04-26},
  abstract = {Level up your Java code and explore what Spring can do for you.},
  howpublished = {https://spring.io},
  langid = {english},
  file = {/Users/maxrn/Zotero/storage/S4EF6QHN/introducing-spring-modulith.html}
}

@misc{kelseyhightower[@kelseyhightower]HttpsCoRcHVMTwm9j2023,
  type = {Tweet},
  title = {{{https://t.co/RcHVMTwm9j}}},
  author = {{Kelsey Hightower [@kelseyhightower]}},
  year = {2023},
  month = mar,
  journal = {Twitter},
  urldate = {2023-04-26},
  file = {/Users/maxrn/Zotero/storage/66NCVTQH/1631352524157648896.html}
}

@misc{Linode,
  title = {{Cloud Computing und Linux-Server | Alternative zu AWS | Linode}},
  journal = {Akamai},
  urldate = {2023-05-27},
  abstract = {Vereinfachen Sie Ihre Infrastruktur mit den Cloud-Computing- und Hosting-L\"osungen von Linode und entwickeln, implementieren und skalieren Sie Ihre L\"osungen schneller und einfacher.},
  howpublished = {https://www.linode.com/de/},
  langid = {ngerman},
  file = {/Users/maxrn/Zotero/storage/5M9FW6HT/de.html}
}

@misc{QuickIntroductionService,
  title = {A {{Quick Introduction}} to {{Service Weaver}}},
  urldate = {2023-04-26},
  howpublished = {https://serviceweaver.dev/blog/quick\_intro.html},
  file = {/Users/maxrn/Zotero/storage/YBNZZFZY/quick_intro.html}
}

@misc{RiseFallCORBA,
  title = {The {{Rise}} and {{Fall}} of {{CORBA}} - {{ACM Queue}}},
  urldate = {2023-04-26},
  howpublished = {https://queue.acm.org/detail.cfm?id=1142044},
  file = {/Users/maxrn/Zotero/storage/3R7YI5YC/detail.html}
}

@misc{serverCaddyUltimateServer,
  title = {Caddy 2 - {{The Ultimate Server}} with {{Automatic HTTPS}}},
  author = {Server, Caddy Web},
  urldate = {2023-05-27},
  abstract = {Caddy is a powerful, enterprise-ready, open source web server with automatic HTTPS written in Go},
  howpublished = {https://caddyserver.com/},
  file = {/Users/maxrn/Zotero/storage/DPVC8IDB/caddyserver.com.html}
}

@article{service_weaver_paper,
  title = {Towards {{Modern Development}} of {{Cloud Applications}}},
  author = {Ghemawat, Sanjay and Grandl, Robert and Petrovic, Srdjan and Whittaker, Michael and Patel, Parveen and Posva, Ivan and Vahdat, Amin},
  year = {2023},
  abstract = {When writing a distributed application, conventional wisdom says to split your application into separate services that can be rolled out independently. This approach is wellintentioned, but a microservices-based architecture like this often backfires, introducing challenges that counteract the benefits the architecture tries to achieve. Fundamentally, this is because microservices conflate logical boundaries (how code is written) with physical boundaries (how code is deployed). In this paper, we propose a different programming methodology that decouples the two in order to solve these challenges. With our approach, developers write their applications as logical monoliths, offload the decisions of how to distribute and run applications to an automated runtime, and deploy applications atomically. Our prototype implementation reduces application latency by up to 15\texttimes{} and reduces cost by up to 9\texttimes{} compared to the status quo.},
  langid = {english},
  file = {/Users/maxrn/Zotero/storage/68FCV4DJ/Ghemawat et al. - 2023 - Towards Modern Development of Cloud Applications.pdf}
}

@misc{serviceWeaverGitHub,
  title = {{{ServiceWeaver}}/Weaver: {{Programming}} Framework for Writing and Deploying Cloud Applications.},
  urldate = {2023-05-24},
  howpublished = {https://github.com/ServiceWeaver/weaver},
  file = {/Users/maxrn/Zotero/storage/CDZECJ28/weaver.html}
}

@misc{serviceWeaverSite,
  title = {Service {{Weaver}}},
  urldate = {2023-05-24},
  howpublished = {https://serviceweaver.dev/},
  file = {/Users/maxrn/Zotero/storage/HN2UGBHU/serviceweaver.dev.html}
}

@article{sillDesignArchitectureMicroservices2016,
  title = {The {{Design}} and {{Architecture}} of {{Microservices}}},
  author = {Sill, Alan},
  year = {2016},
  month = sep,
  journal = {IEEE Cloud Computing},
  volume = {3},
  number = {5},
  pages = {76--80},
  issn = {2325-6095},
  doi = {10.1109/MCC.2016.111},
  abstract = {Microservices are sweeping through cloud design architectures, at once embodying new trends and making use of previous paradigms. This column explores the basis for these trends in both modern and historical standards, and sets out a direction for the future of microservices development.},
  keywords = {architecture,automation,cloud,Cloud computing,Computer architecture,containers,data,design,Design methdology,microservices,networks,Service computing,standards,Standards development,Storage automation},
  file = {/Users/maxrn/Zotero/storage/56WQ32KN/7742259.html}
}

@article{soldani_pains_gains,
  title = {The Pains and Gains of Microservices: {{A Systematic}} Grey Literature Review},
  shorttitle = {The Pains and Gains of Microservices},
  author = {Soldani, Jacopo and Tamburri, Damian Andrew and Van Den Heuvel, Willem-Jan},
  year = {2018},
  month = dec,
  journal = {Journal of Systems and Software},
  volume = {146},
  pages = {215--232},
  issn = {01641212},
  doi = {10.1016/j.jss.2018.09.082},
  urldate = {2023-05-03},
  langid = {english},
  file = {/Users/maxrn/Zotero/storage/2CQPHZC3/Soldani et al. - 2018 - The pains and gains of microservices A Systematic.pdf}
}

@inproceedings{wang_ms_current_situation,
  title = {Research on the {{Current Situation}} and {{Future Trend}} of {{Microservice Technology Development}}},
  booktitle = {2022 {{IEEE}} 6th {{Advanced Information Technology}}, {{Electronic}} and {{Automation Control Conference}} ({{IAEAC}} )},
  author = {Wang, Fuxue and Zhang, Jie},
  year = {2022},
  month = oct,
  pages = {44--54},
  issn = {2689-6621},
  doi = {10.1109/IAEAC54830.2022.9929766},
  abstract = {For many years, we have been looking for a better approach to software architecture, and microservices is one of the latest trends in cloud computing and Internet of Things (IoT) research. It is also one of the most popular trends in software architecture research today. Microservices Architecture (MSA) revolutionizes software systems and cloud-native architecture. New micro services technologies are constantly being born, covering existing technology vulnerabilities and going beyond state-of-the-art frameworks. In recent years,many significant achievements have been made worldwide in this area. Because microservices architectures are evolving rapidly, it is difficult to keep up with their progress, especially for researchers new to the field. In this article, we will briefly discuss the latest developments in microservices architecture in recent years.},
  keywords = {Architecture,Cloud computing,cloud native,Computer architecture,IoT,Market research,Microservice architectures,microservices architecture,Process control,software architecture,Software architecture},
  file = {/Users/maxrn/Zotero/storage/VSAMPRI6/Wang and Zhang - 2022 - Research on the Current Situation and Future Trend.pdf;/Users/maxrn/Zotero/storage/MLD56MVV/9929766.html}
}

@misc{YouWantModules,
  title = {You {{Want Modules}}, {{Not Microservices}}},
  urldate = {2023-05-04},
  howpublished = {http://blogs.newardassociates.com/blog/2023/you-want-modules-not-microservices.html},
  file = {/Users/maxrn/Zotero/storage/6K2YRLW9/you-want-modules-not-microservices.html}
}

@inproceedings{zhangUnderstandingDetectingSoftware2021,
  title = {Understanding and {{Detecting Software Upgrade Failures}} in {{Distributed Systems}}},
  booktitle = {Proceedings of the {{ACM SIGOPS}} 28th {{Symposium}} on {{Operating Systems Principles CD-ROM}}},
  author = {Zhang, Yongle and Yang, Junwen and Jin, Zhuqi and Sethi, Utsav and Rodrigues, Kirk and Lu, Shan and Yuan, Ding},
  year = {2021},
  month = oct,
  pages = {116--131},
  publisher = {{ACM}},
  address = {{Virtual Event Germany}},
  doi = {10.1145/3477132.3483577},
  urldate = {2023-04-26},
  abstract = {Upgrade is one of the most disruptive yet unavoidable maintenance tasks that undermine the availability of distributed systems. Any failure during an upgrade is catastrophic, as it further extends the service disruption caused by the upgrade. The increasing adoption of continuous deployment further increases the frequency and burden of the upgrade task. In practice, upgrade failures have caused many of today's highprofile cloud outages. Unfortunately, there has been little understanding of their characteristics. This paper presents an in-depth study of 123 real-world upgrade failures that were previously reported by users in 8 widely used distributed systems, shedding lights on the severity, root causes, exposing conditions, and fix strategies of upgrade failures. Guided by our study, we have designed a testing framework DUPTester that revealed 20 previously unknown upgrade failures in 4 distributed systems, and applied a series of static checkers DUPChecker that discovered over 800 cross-version data-format incompatibilities that can lead to upgrade failures. DUPChecker has been requested by HBase developers to be integrated into their toolchain.},
  isbn = {978-1-4503-8709-5},
  langid = {english},
  file = {/Users/maxrn/Zotero/storage/2BE2RLQL/Zhang et al. - 2021 - Understanding and Detecting Software Upgrade Failu.pdf}
}
